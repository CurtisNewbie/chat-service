# change spring boot's root log level
logging.level.root=INFO

# server's port, making it 8443 will somehow imply a SSL connection
# which forces the frontend (e.g., ng serve) to enable SSL, tho
# the ssl is in fact disabled below, so we might just use 8080 instead.
server.port=8081

# ------------------ redis ---------------------------------------------
redisson-config=redisson-dev.yaml

# ------------------ datasource ----------------------------------------
spring.datasource.url=jdbc:mysql://localhost:3306/fileServer?serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ------------------ SSL Certificate -----------------------------------
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:cert/fileServer.p12
# The password used to generate the certificate
server.ssl.key-store-password=zhuangyongj
# The alias mapped to the certificate
server.ssl.key-alias=fileServer
server.ssl.enabled=false

# ------------------ RabbitMQ -----------------------------------
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtualHost=/

# ------------------ distributed-task-module ------------------
distributed-task-module.enabled=false

websocket.allowed-origins=http://localhost:4200,http://localhost:8004,http://127.0.0.1:8004